// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// cliente
model ClientModel {
  id                   String             @id @default(uuid())
  name                 String             @db.VarChar(150)
  document             String             @db.VarChar(14)
  email                String             @db.VarChar(50)
  contact              String             @db.VarChar(25)
  dob                  DateTime
  address_cep          String             @db.VarChar(9)
  address_number       Int
  address_complement   String?            @db.VarChar(20)
  requests             RequestModel[]
}

// prestador de servicos
model ProviderModel {
  id                   String             @id @default(uuid())
  name                 String             @db.VarChar(150)
  document             String             @db.VarChar(14)
  email                String             @db.VarChar(50)
  contact              String             @db.VarChar(25)
  dob                  DateTime
  works                ProviderWorkModel[]
  requests             RequestModel[]
}

// trabalhos disponiveis na plataforma
model WorkModel {
  id                   String             @id @default(uuid())
  name                 String             @db.VarChar(150)
  jobs                 WorkJobModel[]
  provider_works       ProviderWorkModel[]
}

// servicos de um trabalho
model WorkJobModel {
  id                   String             @id @default(uuid())
  name                 String             @db.VarChar(150)
  work_id              String
  work                 WorkModel          @relation(fields: [work_id], references: [id])
  provider_work_jobs   ProviderWorkJobModel[]
}

// trabalhos que o prestador de servicos executa
model ProviderWorkModel {
  id                   String             @id @default(uuid())
  work_id              String
  provider_id          String
  work                 WorkModel          @relation(fields: [work_id], references: [id])
  provider             ProviderModel      @relation(fields: [provider_id], references: [id])
  jobs                 ProviderWorkJobModel[]
  requests             RequestProviderWorkModel[]
  min_cost             Float
}

// servicos que o prestador de servicos executa em um trabalho
model ProviderWorkJobModel {
  id                   String             @id @default(uuid())
  provider_work_id     String
  job_id               String
  provider_work        ProviderWorkModel  @relation(fields: [provider_work_id], references: [id])
  job                  WorkJobModel       @relation(fields: [job_id], references:[id])
  requests             RequestProviderWorkJobModel[]
  cost                 Float
}

// solicitacao de prestacao de servicos
model RequestModel {
  id                   String             @id @default(uuid())
  client_id            String
  provider_id          String
  client               ClientModel        @relation(fields: [client_id], references: [id])
  provider             ProviderModel      @relation(fields: [provider_id], references: [id])
  created_at           DateTime
  updated_at           DateTime
  total_cost           Float
  works       RequestProviderWorkModel[]
}

// trabalhos solicitados ao prestador
model RequestProviderWorkModel {
  id                   String             @id @default(uuid())
  request_id           String
  provider_work_id     String
  total_cost           Float
  request              RequestModel       @relation(fields: [request_id], references:[id])
  provider_work        ProviderWorkModel  @relation(fields: [provider_work_id], references: [id])
  jobs                 RequestProviderWorkJobModel[]
}

// servicos dos trabalhos solicitados ao prestador
model RequestProviderWorkJobModel {
  id                          String                   @id @default(uuid())
  request_provider_work_id    String
  provider_work_job_id        String
  request_provider_work       RequestProviderWorkModel @relation(fields: [request_provider_work_id], references: [id])
  provider_work_job           ProviderWorkJobModel     @relation(fields: [provider_work_job_id], references: [id])
}